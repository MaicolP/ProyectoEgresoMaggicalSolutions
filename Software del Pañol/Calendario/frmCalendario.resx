<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSiguiente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAwFJREFUaEPt
        l31P2lAUxkm2KQMR33gRUD/G4twSk21CCy0VKFqt+wbGb7Rkf/sGgqO8tQ5MEE1M/BQkogxn5uJiwu6z
        XJNlZtkczOFyf0mT5t7nntNDz3lSTAwGg8FgMBgMBoPxP3J6etpfqVSmdnerzxuNhp0u3y/q9bqtUCi8
        EiXpXViS8rqu+1EY3b4ftFqth6SIQIDjjEe9j1u4/Dz/PpfL8dijsu5na2srGhLFvM0++Pm6ENwLYlhP
        JpMylXU36+vrC6SVNIfL3XS6Pc1gSDCCQcFwujxNh9N9Fp6NZIhmjsq7D7QM+bUjKMI16vngHRuvK4vq
        RrFY5HApirrh9Y3XyV4DxSQSqVjXtRmGGP0fFMTciNPdxAMvqEtr2Ww2RCUm3GMNe+RtnYUEsZjL6XzX
        GABsFY4U4PkS5gAtpCwubnxfxDVYw1tCy0Eb4IMlONs/L4a0Ru83d+L5HQx0X//ApRyPpw3DeEklN8Ce
        HJ9PQ4szpJg8ab0ZxKKSuyeVSsX4kLBjtdm/mC19VzFZzuzv7z8lD9VDJTfAHjQxOZ7BGXL2kiOGkE6n
        I1Ryt8B5MNjDDtf5iNN1Jsfl7Wq1Okke1EolPwUaaOX43DbOkutjWJrNrm1uKlRyNyQSiTk4j8vtaXh8
        YyeYiXK5PE0e0EwlvwRanMHMEIc7gdOFpYiG2FTy9zg+Pu7DwAqCVHCQofaOTdRVVV2FY1HJrcFZVX29
        6hufqMMEEJusifjEoZLOAnfK53W/P8CV7YPDn9yj3saPFvunIIa6tLQ26vU1BoaGL2Y4rgIT6fiHJmmD
        XrjN9beTfXDoIj6vJOE2VNI2iDWvKEkUghwcFzL0UukFclNJ+xweHk4uLy+/NVstV0gSicUylYODKZLk
        AZW0DWIdkJhwvh6zpWWx2q5WVlbeHB0dPaGS9iFJMBuSKIqlSDSq/a473RbEROxoVNaQS9O0cMfz1Grn
        jnKlMr23t/eMBLfQ5Y6D2MhB/pBN12o1B11mMBgMBoPBYDAYjC7FZPoK0BGlkylQWAUAAAAASUVORK5C
        YII=
</value>
  </data>
</root>